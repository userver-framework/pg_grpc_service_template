# yaml

components_manager:
    coro_pool:
        initial_size: 500             # Preallocate 500 coroutines at startup.
        max_size: 1000                # Do not keep more than 1000 preallocated coroutines.

    task_processors:                  # Task processor is an executor for coroutine tasks

        main-task-processor:          # Make a task processor for CPU-bound couroutine tasks.
            worker_threads: $worker-threads         # Process tasks in 4 threads.
            thread_name: main-worker  # OS will show the threads of this task processor with 'main-worker' prefix.

        fs-task-processor:            # Make a separate task processor for filesystem bound tasks.
            thread_name: fs-worker
            worker_threads: $worker-fs-threads

        grpc-blocking-task-processor:
            thread_name: grpc-worker
            worker_threads: $worker-grpc-threads

    default_task_processor: main-task-processor

    components:                       # Configuring components that were registered via component_list
        grpc-client-factory:
            # The TaskProcessor for blocking connection initiation
            task-processor: grpc-blocking-task-processor

            # Optional channel parameters for gRPC Core
            # https://grpc.github.io/grpc/core/group__grpc__arg__keys.html
            channel-args: {}

        handler-hello:

        hello-client:
            endpoint: $hello-endpoint

        grpc-server:
            port: 8081
            service-defaults:
                middlewares: []
                task-processor: main-task-processor

        server:
            listener:                 # configuring the main listening socket...
                port: $server-port            # ...to listen on this port and...
                task_processor: main-task-processor    # ...process incoming requests on this task processor.
        logging:
            fs-task-processor: fs-task-processor
            loggers:
                default:
                    file_path: '@stderr'
                    level: $logger-level
                    overflow_behavior: discard  # Drop logs if the system is too busy to write them down.

        tracer:                              # Component that helps to trace execution times and requests in logs.
            service-name: pg_grpc_service_template   # "You know. You all know exactly who I am. Say my name. " (c)

        dynamic-config:                      # Dynamic config storage options, do nothing
            fs-cache-path: ''
        dynamic-config-fallbacks:            # Load options from file and push them into the dynamic config storage.
            fallback-path: $config-fallback-path
        testsuite-support: {}

        http-client:
            load-enabled: $is-testing
            fs-task-processor: fs-task-processor

        tests-control:
            load-enabled: $is-testing
            path: /tests/{action}
            method: POST
            task_processor: main-task-processor

        handler-ping:
            path: /ping
            method: GET
            task_processor: main-task-processor
            throttling_enabled: false
            url_trailing_slash: strict-match

        postgres-db-1:
            dbconnection: $dbconnection
            blocking_task_processor: fs-task-processor
            dns_resolver: async
            sync-start: true

        dns-client:
            fs-task-processor: fs-task-processor
